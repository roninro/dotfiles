[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'https://wsdjeg.net/git/dein-ui.vim/'

# [[plugins]]
# repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'rbtnn/vim-vimscript_indentexpr'

[[plugins]]
name= 'catppuccin'
repo = 'catppuccin/vim'
hook_add = '''
colorscheme catppuccin_macchiato
let g:fong#lightline_theme = 'catppuccin_macchiato'
'''

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'

[[plugins]]
repo = 'itchyny/lightline.vim'
depends = [ 'catppuccin', 'lightline-bufferline']
hook_add = '''
runtime rc/lightline.vim
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
let g:fzf_colors =
    \ { 'fg':      ['fg', 'Normal'],
    \ 'bg':      ['bg', 'Normal'],
    \ 'hl':      ['fg', 'Comment'],
    \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
    \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
    \ 'hl+':     ['fg', 'Statement'],
    \ 'info':    ['fg', 'PreProc'],
    \ 'border':  ['fg', 'Ignore'],
    \ 'prompt':  ['fg', 'Conditional'],
    \ 'pointer': ['fg', 'Exception'],
    \ 'marker':  ['fg', 'Keyword'],
    \ 'spinner': ['fg', 'Label'],
    \ 'header':  ['fg', 'Comment'] }
nnoremap <silent> <Leader>f       :Files<CR>
nnoremap <silent> <Leader>b       :Buffers<CR>
'''

[[plugins]]
repo = 'vim-denops/denops.vim'
hook_source = '''
"let g:denops#debug = v:true

let g:denops#server#deno_args = [
    \   '-q',
    \   '-A',
    \ ]
" NOTE: for Deno KV storage
let g:denops#server#deno_args += ['--unstable-kv']
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-commentary'
on_event = 'CursorMoved'

#   call s:add('machakann/vim-sandwich', #{ on_event: 'CursorMoved' })

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gs <plug>(lsp-document-symbol-search)
    nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gt <plug>(lsp-type-definition)
    nmap <buffer> <leader>rn <plug>(lsp-rename)
    nmap <buffer> [g <plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
    " nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
    " nnoremap <buffer> <expr><c-d> lsp#scroll(-4)

    let g:lsp_format_sync_timeout = 1000
    autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')
    
    " refer to doc to add more commands
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
depends = 'vim-lsp'
hook_add = '''
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_event = ['InsertEnter']
hook_add = '''
let g:vsnip_snippet_dir = expand('~/.vim/snippets')
'''
hook_source = '''
" Jump forward or backward
inoremap <expr> <TAB>
      \ vsnip#jumpable(1) ? '<Plug>(vsnip-jump-next)' :
      \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1, "empty")<CR>' :
      \ '<TAB>'
smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
imap <expr> <S-Tab> 
    \ vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)' : 
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(-1, "empty")<CR>' :
    \ '<S-Tab>' 
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
'''

[[plugins]]
repo = 'rafamadriz/friendly-snippets'

[[plugins]]
repo = 'mattn/vim-treesitter'
build = 'cd cmd/treesitter-server && go build'
#on_event = ['BufRead', 'CursorHold']
# hooks_file = '$BASE_DIR/vim9.vim'

[[plugins]]
repo = 'machakann/vim-sandwich'