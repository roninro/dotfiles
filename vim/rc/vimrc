
if &compatible
  set nocompatible
endif


" Minimal options
if '+termguicolors'->exists() && !has('gui_running')
  set termguicolors
endif
set shortmess=aTIcFoOsSW showtabline=0 laststatus=0
set noruler noshowcmd noshowmode

" install dein.vim
let $CACHE = expand('~/.cache')
if !($CACHE->isdirectory())
  call mkdir($CACHE, 'p')
endif
let s:dein_base = $CACHE .. '/dein'
let s:dein_src = s:dein_base .. '/repos/github.com/Shougo/dein.vim'
if !(s:dein_src->isdirectory())
  execute '!git clone https://github.com/Shougo/dein.vim' s:dein_src
endif

execute 'set runtimepath+=' .. s:dein_src

let $BASE_DIR = '<sfile>'->expand()->fnamemodify(':h')

let s:plugins_toml = expand('$BASE_DIR/plugins.toml')
let s:lazy_plugins_toml = expand('$BASE_DIR/lazy.toml')
" let s:operator_plugins_toml = expand('$BASE_DIR/operator.toml')

let g:dein#inline_vimrcs = [
      \ '$BASE_DIR/options.rc.vim',
      \ '$BASE_DIR/mappings.rc.vim',
      \ '$BASE_DIR/filetype.rc.vim',
      \]
if dein#load_state(s:dein_base)
  call dein#begin(s:dein_base)
  call dein#load_toml('$BASE_DIR/plugins.toml')
  call dein#load_toml('$BASE_DIR/lazy.toml', #{ lazy: 1 })
  call dein#load_toml('$BASE_DIR/ddc.toml', #{ lazy: 1 })
  call dein#end()
  call dein#save_state()
endif

filetype indent plugin on
" Enable syntax highlighting
if has('syntax')
  syntax on
endif

command! -nargs=* DeinInstall call dein#install(<f-args>)
